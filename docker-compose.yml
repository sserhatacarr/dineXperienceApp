version: '3'

services:
  postgres_db:
    image: postgres
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: user_service_db
    ports:
      - "5432:5432"
    networks:
      - back-tier
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo
    container_name: mongo_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: 123
    volumes:
      - mongo_data:/data/db
    networks:
      - back-tier
    ports:
      - "27017:27017"

  solr:
    image: solr
    container_name: solr
    ports:
      - "8983:8983"
    volumes:
      - solr_data:/var/solr
    networks:
      - back-tier
    command:
      - solr-precreate
      - restaurants

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    networks:
      - back-tier
    ports:
      - "9411:9411"


  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    networks:
      - back-tier
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    networks:
      - back-tier
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - back-tier
    restart: always

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - back-tier
    restart: always

  restaurant-service:
    build:
      context: ./restaurant-service
      dockerfile: Dockerfile
    container_name: restaurant-service
    ports:
      - "8081:8081"
    networks:
      - back-tier
    restart: always

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8082:8082"
    networks:
      - back-tier
    restart: always

  logging-service:
    build:
      context: ./logging-service
      dockerfile: Dockerfile
    container_name: logging-service
    ports:
      - "8083:8083"
    networks:
      - back-tier
    restart: always


volumes:
  postgres_data:
  solr_data:
  mongo_data:
  kafka_data:

networks:
  back-tier: